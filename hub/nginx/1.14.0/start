#!/bin/sh

nginx_path=/etc/nginx
sites_path=$nginx_path/sites-enabled
site_path=$sites_path/cloud
conf_path=/etc/nginx/conf.d
proxy_path=$conf_path/proxy.conf
ssl_path=/ssl
resolver_ip=10.43.0.10

if [ $CLOUD_CONTEXT = local ]; then
	cert_path=$ssl_path/fullchain.pem
	key_path=$ssl_path/privkey.pem
	server_name='~^(?<app>.+)\.(?<env>development|test)\.cloud\$'
	redirect_domain='~^www\.(?<app>.+)\.(?<env>development|test)\.cloud\$'
	main_domain='$app.$env.cloud'
else
	letsencrypt_path=$ssl_path/live/$CLOUD_DOMAIN
	cert_path=$letsencrypt_path/fullchain.pem
	key_path=$letsencrypt_path/privkey.pem
	server_name=.$CLOUD_DOMAIN
	if [ $CLOUD_HOST = $CLOUD_DOMAIN ]; then
		redirect_domain=www.$CLOUD_DOMAIN
		main_domain=$CLOUD_DOMAIN
	else
		redirect_domain=$CLOUD_DOMAIN
		main_domain=www.$CLOUD_DOMAIN
	fi
fi

redirect=$(cat <<CONF
  return 301 https://$main_domain\$request_uri;
CONF
)

http=$(cat <<CONF
  listen 80;
CONF
)

https=$(cat <<CONF
  listen 443 ssl http2;
  ssl_certificate $cert_path;
  ssl_certificate_key $key_path;
CONF
)

cat <<-CONF > $site_path
	server {
	  server_name $server_name;
	$http
	$redirect
	}

	server {
	  server_name $redirect_domain;
	$https
	$redirect
	}

	server {
	  server_name $CLOUD_REGISTRY_HOST;
	$https

	  location / {
	    include /etc/nginx/conf.d/proxy.conf;
	    proxy_pass http://registry.default.svc.cluster.local:5000;
	  }
	}
CONF

if [ $CLOUD_CONTEXT = local ]; then
	cat <<-CONF >> $site_path

		server {
		  server_name ~^(?<app>.+)\.development\.cloud$;
		$https

		  location / {
		    resolver $resolver_ip;
		    include $proxy_path;
		    proxy_pass http://rails.\$app-development.svc.cluster.local:80;
		  }
		}

		server {
		  server_name ~^(?<app>.+)\.test\.cloud$;
		$https

		  location / {
		    resolver $resolver_ip;
		    include $proxy_path;
		    proxy_pass http://rails.\$app-development.svc.cluster.local:3000;
		  }
		}
	CONF
else
	cat <<-CONF >> $site_path

		server {
		  server_name $server_name;
		$https

		  location / {
		    resolver $resolver_ip;
		    include $proxy_path;
		    proxy_pass http://rails.$CLOUD_NAME-production.svc.cluster.local;
		  }
		}
	CONF
fi

issue-cert
nginx -g 'daemon off;'
