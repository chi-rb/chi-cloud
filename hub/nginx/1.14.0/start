#!/bin/sh

nginx_path=/etc/nginx
sites_path=$nginx_path/sites-enabled
site_path=$sites_path/cloud
conf_path=/etc/nginx/conf.d
proxy_path=$conf_path/proxy.conf
resolver_ip=10.43.0.10

if [ $CLOUD_CONTEXT = local ]; then
	ssl_path=/ssl
	cert_path=$ssl_path/fullchain.pem
	key_path=$ssl_path/privkey.pem
	server_name='~^(?<app>.+)\-(?<env>.+)\.cloud\.local$'
	main_domain='$app-$env.cloud.local'
else
	letsencrypt_path=/etc/letsencrypt/live/$CLOUD_DOMAIN
	cert_path=$letsencrypt_path/fullchain.pem
	key_path=$letsencrypt_path/privkey.pem
	server_name=.$CLOUD_DOMAIN
	if [ $CLOUD_HOST = $CLOUD_DOMAIN ]; then
		redirect_domain=www.$CLOUD_DOMAIN
		main_domain=$CLOUD_DOMAIN
	else
		redirect_domain=$CLOUD_DOMAIN
		main_domain=www.$CLOUD_DOMAIN
	fi
fi

redirect=$(cat <<CONF
  return 301 https://$main_domain\$request_uri;
CONF
)

http=$(cat <<CONF
  listen 80;
CONF
)

https=$(cat <<CONF
  listen 443 ssl http2;
  ssl_certificate $cert_path;
  ssl_certificate_key $key_path;
CONF
)

cat <<-CONF > $site_path
	server {
	  server_name $server_name;
	$http
	$redirect
	}

CONF

add_rails() {
	cat <<-CONF >> $site_path
		server {
		  server_name ~^(?<app>.+)\-$1\.cloud\.local$;
		$https

		  location / {
		    resolver $resolver_ip;
		    include $proxy_path;
		    proxy_pass http://rails.$2-$3.svc.cluster.local:$4;
		  }
		}

	CONF
}

if [ $CLOUD_CONTEXT = local ]; then
	add_rails development \$app development 80
	add_rails test \$app development 3000
	add_rails '(?<env>.+)' \$app \$env 80
else
	cat <<-CONF >> $site_path
		server {
			server_name $redirect_domain;
		$https
		$redirect
		}

	CONF
	add_rails $server_name $CLOUD_NAME production 80
fi

cat <<-CONF >> $site_path
	server {
	  server_name $CLOUD_REGISTRY_HOST;
	$https

	  location / {
	    resolver $resolver_ip;
	    include $proxy_path;
	    proxy_pass http://registry.default.svc.cluster.local:5000;
	  }
	}
CONF

issue-cert
nginx -g 'daemon off;'
